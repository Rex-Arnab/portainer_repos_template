{
  "version": "2",
  "templates": [
    {
      "type": 1,
      "title": "Registry",
      "description": "Docker image registry",
      "categories": ["docker"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": ["5000/tcp"],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ]
    },
    {
      "type": 1,
      "title": "Registry (cache)",
      "description": "Docker image registry configured as a DockerHub pull through cache",
      "categories": ["docker"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": ["5000/tcp"],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ],
      "env": [
        {
          "name": "REGISTRY_PROXY_REMOTEURL",
          "default": "https://registry-1.docker.io",
          "preset": true
        }
      ]
    },
    {
      "type": 1,
      "title": "Ubuntu",
      "description": "Debian-based Linux operating system",
      "categories": ["operating-system"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
      "image": "ubuntu:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "type": 1,
      "title": "NodeJS",
      "description": "JavaScript-based platform for server-side and networking applications",
      "categories": ["development"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
      "image": "node:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "type": 1,
      "title": "Nginx",
      "description": "High performance web server",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
      "image": "nginx:latest",
      "ports": ["80/tcp", "443/tcp"],
      "volumes": [
        {
          "container": "/etc/nginx"
        },
        {
          "container": "/usr/share/nginx/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Httpd",
      "description": "Open-source HTTP server",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
      "image": "httpd:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/usr/local/apache2/htdocs/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Caddy",
      "description": "Open-source web server with automatic HTTPS written in Go",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
      "image": "caddy:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "MySQL",
      "description": "The most popular open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
      "image": "mysql/mysql-server:5.7",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        },
        {
          "name": "MYSQL_ROOT_HOST",
          "default": "%",
          "preset": true
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "MariaDB",
      "description": "Performance beyond MySQL",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mariadb.png",
      "image": "mariadb:latest",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "PostgreSQL",
      "description": "The most advanced open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
      "image": "postgres:latest",
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Superuser"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Superuser password"
        }
      ],
      "ports": ["5432/tcp"],
      "volumes": [
        {
          "container": "/var/lib/postgresql/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mongo",
      "description": "Open-source document-oriented database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
      "image": "mongo:latest",
      "ports": ["27017/tcp"],
      "volumes": [
        {
          "container": "/data/db"
        }
      ]
    },
    {
      "type": 1,
      "title": "CrateDB",
      "description": "An open-source distributed SQL database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
      "image": "crate:latest",
      "ports": ["4200/tcp", "4300/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Elasticsearch",
      "description": "Open-source search and analytics engine",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
      "image": "docker.elastic.co/elasticsearch/elasticsearch:7.15.1",
      "ports": ["9200/tcp", "9300/tcp"],
      "volumes": [
        {
          "container": "/usr/share/elasticsearch/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "GitLab CE",
      "description": "Open-source end-to-end software development platform",
      "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/ee/install/docker.html\" target=\"_blank\">GitLab documentation</a> to get started.",
      "categories": ["development", "project-management"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
      "image": "gitlab/gitlab-ce:latest",
      "ports": ["80/tcp", "443/tcp", "22/tcp"],
      "volumes": [
        {
          "container": "/etc/gitlab"
        },
        {
          "container": "/var/log/gitlab"
        },
        {
          "container": "/var/opt/gitlab"
        }
      ]
    },
    {
      "type": 1,
      "title": "Minio",
      "description": "A distributed object storage server built for cloud applications and devops",
      "categories": ["storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
      "image": "quay.io/minio/minio:latest",
      "ports": ["9000/tcp", "9001/tcp"],
      "env": [
        {
          "name": "MINIO_ROOT_USER",
          "label": "Root user"
        },
        {
          "name": "MINIO_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/root/.minio"
        }
      ],
      "command": "server /data --console-address ':9001'"
    },
    {
      "type": 1,
      "title": "Scality S3",
      "description": "Standalone AWS S3 protocol server",
      "categories": ["storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
      "image": "scality/s3server",
      "ports": ["8000/tcp"],
      "env": [
        {
          "name": "SCALITY_ACCESS_KEY",
          "label": "Scality S3 access key"
        },
        {
          "name": "SCALITY_SECRET_KEY",
          "label": "Scality S3 secret key"
        }
      ],
      "volumes": [
        {
          "container": "/usr/src/app/localData"
        },
        {
          "container": "/usr/src/app/localMetadata"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "description": "Microsoft SQL Server on Linux",
      "categories": ["database"],
      "platform": "linux",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "mcr.microsoft.com/mssql/server:2019-latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "SA_PASSWORD",
          "label": "SA password"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "description": "Microsoft SQL Server Developer for Windows containers",
      "categories": ["database"],
      "platform": "windows",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-developer:latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server Express",
      "description": "Microsoft SQL Server Express for Windows containers",
      "categories": ["database"],
      "platform": "windows",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-express:latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Solr",
      "description": "Open-source enterprise search platform",
      "categories": ["search-engine"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
      "image": "solr:latest",
      "ports": ["8983/tcp"],
      "volumes": [
        {
          "container": "/opt/solr/mydata"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redis",
      "description": "Open-source in-memory data structure store",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "image": "redis:latest",
      "ports": ["6379/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 2,
      "title": "Redis Cluster",
      "description": "Open-source in-memory data structure store - Cluster mode",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/redis-cluster/docker-stack.yaml"
      },
      "env": [
        {
          "name": "REDIS_PASSWD",
          "label": "Redis password"
        }
      ]
    },
    {
      "type": 2,
      "title": "Swarm monitoring",
      "description": "Monitor your cluster performances with Prometheus & Grafana",
      "note": "Requires Docker version 19.03.0+. <b>Make sure to add the <code>monitoring == true</code> one of your Swarm manager node before deploying this stack.</b>",
      "categories": ["Monitoring"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "swarm/monitoring/docker-compose.yml"
      },
      "env": [
        {
          "name": "GRAFANA_USER",
          "label": "Grafana admin user",
          "default": "admin"
        },
        {
          "name": "GRAFANA_PASSWORD",
          "label": "Grafana admin password"
        }
      ]
    },
    {
      "type": 2,
      "title": "Redis Cluster",
      "description": "Open-source in-memory data structure store - Cluster mode",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/redis-cluster/docker-stack.yaml"
      },
      "env": [
        {
          "name": "REDIS_PASSWD",
          "label": "Redis password"
        }
      ]
    },
    {
      "type": 1,
      "title": "RabbitMQ",
      "description": "Highly reliable enterprise messaging system",
      "categories": ["messaging"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
      "image": "rabbitmq:latest",
      "ports": ["5671/tcp", "5672/tcp"],
      "volumes": [
        {
          "container": "/var/lib/rabbitmq"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ghost",
      "description": "Free and open-source blogging platform",
      "categories": ["blog"],
      "note": "Access the blog management interface under <code>/ghost/</code>.",
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
      "image": "ghost:latest",
      "ports": ["2368/tcp"],
      "volumes": [
        {
          "container": "/var/lib/ghost/content"
        }
      ]
    },
    {
      "type": 1,
      "title": "Joomla",
      "description": "Another free and open-source CMS",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
      "image": "joomla:latest",
      "env": [
        {
          "name": "JOOMLA_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "JOOMLA_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Drupal",
      "description": "Open-source content management framework",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
      "image": "drupal:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Plone",
      "description": "A free and open-source CMS built on top of Zope",
      "note": "Default user and password are admin/admin",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
      "image": "plone:latest",
      "ports": ["8080/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Sematext Docker Agent",
      "description": "Collect logs, metrics and docker events",
      "categories": ["Log Management", "Monitoring"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "image": "sematext/sematext-agent-docker:latest",
      "name": "sematext-agent",
      "privileged": true,
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ]
    },
    {
      "type": 1,
      "title": "Datadog agent",
      "description": "Collect events and metrics",
      "categories": ["Monitoring"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "image": "datadog/agent:latest",
      "env": [
        {
          "name": "DD_API_KEY",
          "label": "Datadog API key"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock",
          "readonly": true
        },
        {
          "container": "/host/sys/fs/cgroup",
          "bind": "/sys/fs/cgroup",
          "readonly": true
        },
        {
          "container": "/host/proc",
          "bind": "/proc",
          "readonly": true
        }
      ]
    },
    {
      "type": 1,
      "title": "Mautic",
      "description": "Open-source marketing automation platform",
      "categories": ["marketing"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
      "image": "mautic/mautic:latest",
      "env": [
        {
          "name": "MAUTIC_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "MAUTIC_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jenkins",
      "description": "Open-source continuous integration tool",
      "categories": ["continuous-integration"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
      "image": "jenkins/jenkins:lts-jdk11",
      "ports": ["8080/tcp", "50000/tcp"],
      "volumes": [
        {
          "container": "/var/jenkins_home"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redmine",
      "description": "Open-source project management tool",
      "note": "Default user and password are admin/admin",
      "categories": ["project-management"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
      "image": "redmine:latest",
      "ports": ["3000/tcp"],
      "volumes": [
        {
          "container": "/usr/src/redmine/files"
        }
      ]
    },
    {
      "type": 1,
      "title": "File browser",
      "description": "A web file manager",
      "note": "Default credentials: admin/admin",
      "categories": ["filesystem", "storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/filebrowser.png",
      "image": "filebrowser/filebrowser:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/srv"
        }
      ],
      "command": "--port 80 --database /data/database.db --root /srv"
    },
    {
      "type": 1,
      "title": "CommandBox",
      "description": "ColdFusion (CFML) CLI",
      "categories": ["development"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
      "image": "ortussolutions/commandbox:latest",
      "env": [
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": ["8080/tcp", "8443/tcp"]
    },
    {
      "type": 1,
      "title": "ContentBox",
      "description": "Open-source modular CMS",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
      "image": "ortussolutions/contentbox:latest",
      "env": [
        {
          "name": "express",
          "default": "true",
          "preset": true
        },
        {
          "name": "install",
          "default": "true",
          "preset": true
        },
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": ["8080/tcp", "8443/tcp"],
      "volumes": [
        {
          "container": "/data/contentbox/db"
        },
        {
          "container": "/app/includes/shared/media"
        }
      ]
    },
    {
      "type": 1,
      "title": "Dokku",
      "description": "Dokku setup as a container",
      "categories": ["PaaS"],
      "platform": "linux",
      "logo": "",
      "image": "dokku/dokku",
      "ports": ["22/tcp", "80/tcp", "443/tcp"],
      "volumes": [
        {
          "container": "/mnt/dokku",
          "bind": "/var/lib/dokku"
        },
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ],
      "env": [
        {
          "name": "DOKKU_HOSTNAME",
          "label": "Dokku hostname",
          "description": "Global hostname to be registered by Dokku"
        },
        {
          "name": "DOKKU_HOST_ROOT",
          "label": "Dokku host root",
          "default": "/var/lib/dokku/home/dokku",
          "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'"
        }
      ]
    },
    {
      "type": 1,
      "title": "OPC Router",
      "description": "No-code middleware for industrial applications. The OPC Router connects PLCs, PCS, SCADA, MES, SQL databases and servers, label printers, e-mail servers and erp-systems via OPC UA, MQTT, REST, CSV and many others without any programming effort",
      "note": "More information about the <a href=\"https://www.opc-router.com/terms-of-use-and-eula/?utm_source=DockerHub_runtime&utm_medium=click&utm_campaign=TermsOfUseAndEula\" target=\"_blank\">EULA</a>.",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/opc-router.png",
      "image": "opcrouter/runtime:latest",
      "ports": ["49429/tcp", "8080/tcp", "8081/tcp"],
      "env": [
        {
          "name": "INITIAL_USERNAME",
          "label": "Initial Admin User user"
        },
        {
          "name": "INITIAL_PASSWORD",
          "label": "Inital Admin User Password"
        },
        {
          "name": "OR_I_ACCEPT_EULA",
          "label": "Accept EULA",
          "select": [
            {
              "text": "Yes, I accept",
              "value": "true",
              "default": true
            }
          ]
        }
      ],
      "volumes": [
        {
          "container": "/data/database"
        },
        {
          "container": "/inray"
        },
        {
          "container": "/var/log/opcrouter"
        }
      ]
    },

    {
      "type": 2,
      "title": "Portainer Agent",
      "description": "Manage all the resources in your Swarm cluster",
      "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/portainer-agent/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "OpenFaaS",
      "name": "func",
      "description": "Serverless functions made simple",
      "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
      "categories": ["serverless"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
      "repository": {
        "url": "https://github.com/openfaas/faas",
        "stackfile": "docker-compose.yml"
      }
    },
    {
      "type": 2,
      "title": "IronFunctions",
      "description": "Open-source serverless computing platform",
      "note": "Deploys the IronFunctions API and UI.",
      "categories": ["serverless"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/ironfunctions/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "CockroachDB",
      "description": "CockroachDB cluster",
      "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/cockroachdb/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/wordpress/docker-stack.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 3,
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/wordpress/docker-compose.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "title": "Sematext Docker Agent",
      "type": 2,
      "categories": ["Log Management", "Monitoring"],
      "description": "Collect logs, metrics and docker events",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
      },
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ]
    },
    {
      "title": "Datadog agent",
      "type": 2,
      "categories": ["Monitoring"],
      "description": "Collect events and metrics",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/datadog-agent/docker-stack.yml"
      },
      "env": [
        {
          "name": "API_KEY",
          "label": "Datadog API key"
        }
      ]
    },

    {
      "type": 3,
      "title": "Dokku",
      "description": "Dokku setup as a compose file",
      "categories": ["PaaS"],
      "platform": "linux",
      "logo": "",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/dokku/docker-compose.yml"
      },
      "env": [
        {
          "name": "VERSION",
          "label": "Dokku version",
          "description": "Version of Dokku to use ('latest' if empty)",
          "default": "latest"
        },
        {
          "name": "DOKKU_HOSTNAME",
          "label": "Dokku hostname",
          "description": "Global hostname to be registered by Dokku"
        },
        {
          "name": "VOLUME_PATH",
          "label": "Dokku volume path",
          "description": "Host path to be bound to /mnt/dokku (`/var/lib/dokku` if empty)",
          "default": "/var/lib/dokku"
        },
        {
          "name": "DOKKU_HOST_ROOT",
          "label": "Dokku host root",
          "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'",
          "default": "/var/lib/dokku/home/dokku"
        },
        {
          "name": "SSH_PORT",
          "label": "SSH port",
          "description": "Host port to expose SSH port of Dokku (22 if empty)",
          "default": "22"
        },
        {
          "name": "HTTP_PORT",
          "label": "HTTP port",
          "description": "Host port to expose HTTP port of Dokku (80 if empty)",
          "default": "80"
        },
        {
          "name": "HTTPS_PORT",
          "label": "HTTPS port",
          "description": "Host port to expose HTTPS port of Dokku (443 if empty)",
          "default": "443"
        }
      ]
    },
    {
      "categories": ["Adblocking"],
      "description": "AdGuard Home is a network-wide software for blocking ads & tracking. After you set it up, it\u2019ll cover ALL your home devices, and you don\u2019t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your network.",
      "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/adguard.png",
      "name": "adguardhome",
      "platform": "linux",
      "repository": {
        "stackfile": "Template/Stack/adguardhome.yml",
        "url": "https://github.com/xneo1/portainer_templates"
      },
      "title": "Adguard Home",
      "type": 3
    },
    {
      "type": 1,
      "name": "grafana",
      "description": "Grafana is the open source analytics & monitoring solution for every database.",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/9/9d/Grafana_logo.png?20170804201233",
      "categories": ["Analytics", "Monitoring", "Visualization"],
      "platform": "linux",
      "image": "grafana/grafana:latest",
      "title": "Grafana",
      "ports": ["3000/tcp"],
      "env": [
        {
          "name": "GF_SECURITY_ALLOW_EMBEDDING",
          "label": "Allow embedding",
          "default": false,
          "type": "boolean"
        },
        {
          "name": "GF_SECURITY_COOKIE_SAMESITE",
          "label": "Same Site",
          "default": "none",
          "type": "enum",
          "enum": ["none", "lax", "strict"]
        },
        {
          "name": "GF_SECURITY_COOKIE_SECURE",
          "label": "Secure cookie",
          "default": false
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": ["Monitor", "Tools"],
      "description": "Monitor your Raspberry Pi and Dockers using Grafana developed by oijkn. Please download grafana configs from his git https://github.com/oijkn/Docker-Raspberry-PI-Monitoring",
      "env": [
        {
          "default": "15d",
          "label": "PROMETHEUS_RETENTION",
          "name": "PROMETHEUS_RETENTION"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/rpi_monitor.png",
      "name": "RaspberryPi-Docker-Monitor",
      "platform": "linux",
      "ports": ["3000:3000/tcp"],
      "repository": {
        "stackfile": "stack/raspberrypi-monitoring.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "restart_policy": "unless-stopped",
      "title": "Raspberry Pi Docker Monitor",
      "type": 3,
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">rpi_docker_monitor.md</a></h3><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/rpi_docker_monitor.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/rpi_docker_monitor.sh | bash</h3><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=IoD3vFuep64&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=8 target=\"_blank\">Novaspirit Tech - Raspberry Pi Docker Monitoring</a><br><br>"
    },
    {
      "type": 1,
      "title": "Wps-office",
      "name": "Wps-office",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wps-office/config</p>",
      "description": "[WPS Office](https://www.wps.com/) is a lightweight, feature-rich comprehensive office suite with high compatibility. As a handy and professional office software, WPS Office allows you to edit files in Writer, Presentation, Spreadsheet, and PDF to improve your work efficiency.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wps-office-icon.png",
      "image": "linuxserver/wps-office:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": ["3000:3000/tcp", "3001:3001/tcp"],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/wps-office/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Vscodium",
      "name": "Vscodium",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/vscodium/config</p>",
      "description": "[VSCodium](https://vscodium.com/) is a community-driven, freely-licensed binary distribution of Microsoft\u2019s editor VS Code.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/vscodium-icon.png",
      "image": "linuxserver/vscodium:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": ["3000:3000/tcp", "3001:3001/tcp"],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/vscodium/config"
        }
      ],
      "restart_policy": "unless-stopped"
    }
  ]
}